% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfa.r
\docType{class}
\name{mfa-class}
\alias{mfa}
\alias{mfa-class}
\title{Class mfa}
\usage{
mfa(data, sets, ncomps = NULL, center = TRUE, scale = TRUE)
}
\arguments{
\item{data}{could be a numeric matrix or data.frame, should be in the same order of sets}

\item{sets}{list of vector contains vector of indices or variable names of each group}

\item{ncomps}{positive integer indicating how many number of components are to be extracted}

\item{center}{either a logical value or a numeric vector of length equal to the number of active variables in the analysis}

\item{scale}{either a logical value or a numeric vector of length equal to the number of active variables in the analysis}
}
\value{
an object of class \code{mfa} with the following elements:

\item{sets}{list of sets}

\item{weights}{vector of weights}

\item{eigenvalues}{vector of eigenvalues}

\item{common_factor_score}{matrix of common factor scores}

\item{partial_factor_score}{list of matrix of partial factor scores}

\item{loadings}{matrix of loadings}
}
\description{
Class \code{mfa} defines a mfa model

Creates an object of class \code{mfa}.
}
\details{
Constructor method of mfa Class.
}
\examples{
# default
test<-mfa(wine,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53))

# use your own scale method
#scale with vector
test<-mfa(wine,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53),
          center = apply(wine_data,2,mean),scale = apply(wine_data,2,sd))
# scale in advance
ndatas<-apply(wine,2,function(x){ (x-mean(x))/norm(x-mean(x),type="2")})
test<-mfa(ndatas,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53),
          center=FALSE,scale=FALSE)

# only print the first two components
ndatas<-apply(wine,2,function(x){ (x-mean(x))/norm(x-mean(x),type="2")})
test<-mfa(ndatas,sets=list(1:6,7:12,13:18,19:23,24:29,30:34,35:38,39:44,45:49,50:53),
          ncomp=2,center=FALSE,scale=FALSE)

# character sets
ndatas<-apply(wine,2,function(x){ (x-mean(x))/norm(x-mean(x),type="2")})
# Use the first and last variable names of each group:
test<-mfa(ndatas,sets=list(c("V1.G1","V6.G1"),c("V1.G2","V8.G2"),c("V1.G3","V10.G3"),
                           c("V1.G4","V8.G4"),c("V1.G5","V12.G5"),c("V1.G6","V13.G6"),
                           c("V1.G7","V4.G7"),c("V1.G8","V5.G8"),c("V1.G9","V15.G9"),
                           c("V1.G10","V4.G10")),scale = F, center = F)
# or use the full list of variable names of each group:
test<-mfa(ndatas,sets=list(c("V1.G1","V2.G1","V3.G1","V4.G1","V5.G1","V6.G1"),
                           c("V1.G2","V2.G2","V3.G2","V4.G2","V7.G2","V8.G2"),
                           c("V1.G3","V2.G3","V3.G3","V4.G3","V9.G3","V10.G3"),
                           c("V1.G4","V2.G4","V3.G4","V4.G4","V8.G4"),
                           c("V1.G5","V2.G5","V3.G5","V4.G5","V11.G5","V12.G5"),
                           c("V1.G6","V2.G6","V3.G6","V4.G6","V13.G6"),
                           c("V1.G7","V2.G7","V3.G7","V4.G7"),
                           c("V1.G8","V2.G8","V3.G8","V4.G8","V14.G8","V5.G8"),
                           c("V1.G9","V2.G9","V3.G9","V4.G9","V15.G9"),
                           c("V1.G10","V2.G10","V3.G10","V4.G10")
                           ),scale = F, center = F)
}

